<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="robot_shooter">

  <!-- Constants for robot dimensions -->
  <!-- <xacro:property name="base_width" value="0.3" />
  <xacro:property name="base_length" value="0.3" />
  <xacro:property name="base_height" value="0.15" />
  
  <xacro:property name="turret_radius" value="0.1" />
  <xacro:property name="turret_height" value="0.1" />
  
  <xacro:property name="gun_length" value="0.15" />
  <xacro:property name="gun_radius" value="0.02" /> -->

  <xacro:property name="camera_size" value="0.05" />
    <!-- BASE LINK-->
  <xacro:property name="base_link_radius" value="0.6"/>
  <xacro:property name="base_link_length" value="0.3"/>

  <!-- PAN LINK-->
  <xacro:property name="pan_link_radius" value="0.4"/>
  <xacro:property name="pan_link_length" value="0.1"/>

  <!-- BOTH PILLAR LINK-->
  <xacro:property name="pillar_link_x" value="0.02"/>
  <xacro:property name="pillar_link_y" value="0.4"/>
  <xacro:property name="pillar_link_z" value="1.5"/>

  <!-- BARREL LINK-->
  <xacro:property name="barrel_link_radius" value="1.25"/>
  <xacro:property name="barrel_link_length" value="1.8"/>


  <!-- LINK MASS -->
  <xacro:property name="base_link_mass" value="5.0"/>
  <xacro:property name="pan_link_mass" value="2.0"/>
  <xacro:property name="pillar_link_mass" value="1.5"/>
  <xacro:property name="barrel_link_mass" value="1.0"/>


  <xacro:macro name="inertia_base">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="${base_link_mass}"/>
      <inertia
        ixx="${(1/12.0)*base_link_mass*(3*base_link_radius*base_link_radius + base_link_length*base_link_length)}"
        ixy="0.0" ixz="0.0"
        iyy="${(1/12.0)*base_link_mass*(3*base_link_radius*base_link_radius + base_link_length*base_link_length)}"
        iyz="0.0"
        izz="${0.5*base_link_mass*base_link_radius*base_link_radius}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="inertia_pan">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="${pan_link_mass}"/>
      <inertia
        ixx="${(1/12.0)*pan_link_mass*(3*pan_link_radius*pan_link_radius + pan_link_length*pan_link_length)}"
        ixy="0.0" ixz="0.0"
        iyy="${(1/12.0)*pan_link_mass*(3*pan_link_radius*pan_link_radius + pan_link_length*pan_link_length)}"
        iyz="0.0"
        izz="${0.5*pan_link_mass*pan_link_radius*pan_link_radius}"/>
    </inertial>
  </xacro:macro>

  <material name="red">
    <color rgba="0.8 0 0 1"/>
  </material>

  <material name="green">
    <color rgba="0 0.8 0 1"/>
  </material>

  <material name="blue">
    <color rgba="0 0 0.8 1"/>
  </material>

  <material name="yellow">
    <color rgba="0.8 0.8 0 1"/>
  </material>

<!-- ROBOT CONSTRUCTION -->


  <!-- Robot Base Link -->
  <!-- <link name="base_link"> -->
  <link name="base_link">
    <visual>
      <geometry>
        <cylinder radius="${base_link_radius}" length="${base_link_length}"/>
        <!-- <cylinder radius="0.6" length="0.3"/> -->
      </geometry>
    </visual>
    <collision>
      <geometry>
        <!-- <cylinder radius="0.6" length="0.3"/> -->

        <cylinder radius="${base_link_radius}" length="${base_link_length}"/>
      </geometry>
    </collision>

    <xacro:inertia_base />
    
  </link>

  <!-- Pan Joint - Rotates horizontally -->
  <joint name="base_to_pan_joint" type="continuous">
    <axis xyz="0 0 1" />
    <parent link="base_link"/>
    <child link="pan_link"/>
    <origin xyz="0 0 ${base_link_length/2}"/>
    <!-- <limit lower="-3.14" upper="3.14" effort="10" velocity="1.0"/> -->
    <dynamics damping="0.1" friction="0.1"/>
    <!-- <limit lower="-3.14" upper="3.14"/> -->
  </joint>

  <link name="pan_link">
    <visual>
      <geometry>
        <cylinder radius="${pan_link_radius}" length="${pan_link_length}"/>
      </geometry>
      <material name="yellow"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="${pan_link_radius}" length="${pan_link_length}"/>
      </geometry>
    </collision>
    <xacro:inertia_pan />
  </link>

  <joint name="pan_to_left_pillar_joint" type="fixed">
    <parent link="pan_link"/>
    <child link="left_pillar_link"/>
    <origin xyz="0.25 0 0.4"/>
  </joint>

  <link name="left_pillar_link">
    <visual>
      <geometry>
        <box size="${pillar_link_x} ${pillar_link_y} ${pillar_link_z}" />
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <box size="${pillar_link_x} ${pillar_link_y} ${pillar_link_z}" />
      </geometry>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
    </collision>
    <material name="blue" />

  </link>

  <joint name="pan_to_right_pillar_joint" type="fixed">
    <parent link="pan_link"/>
    <child link="right_pillar_link"/>
    <origin xyz="-0.25 0 0.4"/>
  </joint>

  <link name="right_pillar_link">
    <visual>
      <geometry>
        <box size="${pillar_link_x} ${pillar_link_y} ${pillar_link_z}" />
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="blue" />
    </visual>
     <collision>
      <geometry>
        <box size="${pillar_link_x} ${pillar_link_y} ${pillar_link_z}" />
      </geometry>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
    </collision>
    <inertial>
      <mass value="0.5"/>
      <inertia ixx="0.005" ixy="0" ixz="0" iyy="0.005" iyz="0" izz="0.005"/>
    </inertial>
  </link>

  <!-- Gun barrel -->
  <joint name="right_pillar_to_barrel_joint" type="revolute">
    <parent link="right_pillar_link"/>
    <child link="barrel_link"/>
    <!-- <origin xyz="0 -0.2 0.75" rpy="0 1.57 0"/> -->
    <origin xyz="0.2 0 0.75" rpy="0 0 0"/>
    <axis xyz="1 0 0" />
    <limit lower="-0.5" upper="0.5" effort="10.0" velocity="1.0"/>
  </joint>

  <link name="barrel_link">
    <visual>
      <geometry>
        <cylinder radius="${barrel_link_radius/5.5}" length="${barrel_link_length}"/>
      </geometry>
      <!-- <origin rpy="1.65 0 0" xyz="0.25 0.1 0.1"/> -->
      <origin rpy="1.6 0 0" xyz="0.05 0.1 -0.1"/>
      <material name="red"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="${barrel_link_radius/5}" length="${barrel_link_length}"/>
      </geometry>
      <!-- <origin rpy="1.65 0 0" xyz="-0.6 0.1 0.1"/> -->
      <origin rpy="1.65 0 0" xyz="0 0.1 0.1"/>
    </collision>
    <inertial>
      <mass value="${barrel_link_mass}"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>

  <!-- Camera joint and link -->
  <joint name="camera_joint" type="fixed">
    <parent link="barrel_link"/>
    <child link="camera_link"/>
    <origin xyz="0.05 ${barrel_link_length/2} 0.15" rpy="0 0 1.5708"/>
  </joint>

  <link name="camera_link">
    <visual>
      <geometry>
        <box size="${camera_size} ${camera_size} ${camera_size}"/>
      </geometry>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <material name="black">
        <color rgba="0.1 0.1 0.1 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="${camera_size} ${camera_size} ${camera_size}"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0.0 0.0 0.0"/>
      <mass value="0.1"/>
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.0001" iyz="0" izz="0.0001"/>
    </inertial>
  </link>

  <!-- Camera sensor -->
  <!-- <gazebo reference="camera_link">
    <sensor name="camera" type="camera">
      <camera>
        <horizontal_fov>1.3962634</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>8</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>30</update_rate>
      <visualize>true</visualize>
      <topic>shooter/camera</topic>
        <plugin filename="gz-sim-camera-system" name="gz::sim::systems::Camera">
          <render_engine>ogre2</render_engine>
        </plugin>
        <plugin filename="gz-sim-sensors-system" name="gz::sim::systems::Sensors">
          <render_engine>ogre2</render_engine>
        </plugin>
        <plugin filename="libgz_ros2_camera.so" name="gz_ros2_camera::GzROS2Camera">
          <ros>
            <namespace>shooter</namespace>
            <parameter name="frame_id">camera_link</parameter>
          </ros>
          <hack_baseline>0.07</hack_baseline>
          <camera_name>camera</camera_name>
          <image_topic_name>image_raw</image_topic_name>
          <camera_info_topic_name>camera_info</camera_info_topic_name>
        </plugin>
    </sensor>
  </gazebo> -->

  <!-- Camera sensor  -->
  <gazebo reference="camera_link">
    <sensor type="camera" name="camera">
      <visualize>true</visualize>
      <update_rate>30.0</update_rate>
      <camera name="shooter_camera">
        <horizontal_fov>1.0472</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>80</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>shooter/camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>


  <!-- Control for pan and tilt joints -->
  <!-- <gazebo>
    <plugin name="gz_ros2_control::GazeboSimROS2ControlPlugin" filename="gz_ros2_control-system">
      <parameters>$(find robot_shooter)/config/shooter_controllers.yaml</parameters>
    </plugin>
  </gazebo> -->

  <gazebo>
    <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
      <parameters>$(find robot_shooter)/config/shooter_controllers.yaml</parameters>
    </plugin>
  </gazebo>

  <ros2_control name="GazeboSystem" type="system">
    <hardware>
      <!-- <plugin>gz_ros2_control/GazeboSimSystem</plugin> -->
      <plugin>gazebo_ros2_control/GazeboSystem</plugin>
    </hardware>

    <joint name="base_to_pan_joint">
      <command_interface name="position">
        <param name="min">-1</param>
        <param name="max">1</param>
      </command_interface>
      <state_interface name="position">
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>

    <joint name="right_pillar_to_barrel_joint">
      <command_interface name="position">
        <param name="min">-1.57</param>
        <param name="max">1.57</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
  </ros2_control>




  <!-- Transmissions for ros_control -->
  <transmission name="pan_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="base_to_pan_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="pan_motor">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <transmission name="tilt_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_pillar_to_barrel_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="tilt_motor">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <!-- Color for Gazebo -->
  <gazebo reference="base_link">
    <material>Gazebo/Red</material>
  </gazebo>

  <gazebo reference="pan_link">
    <material>Gazebo/Yellow</material>
  </gazebo>

  <gazebo reference="right_pillar_link">
    <material>Gazebo/Blue</material>
  </gazebo>
  
  <gazebo reference="left_pillar_link">
    <material>Gazebo/Blue</material>
  </gazebo>

  <gazebo reference="barrel_link">
    <material>Gazebo/Red</material>
  </gazebo>

  <gazebo reference="camera_link">
    <material>Gazebo/Black</material>
  </gazebo>
</robot>